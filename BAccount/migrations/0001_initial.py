# Generated by Django 2.2.5 on 2020-02-10 10:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='GoodPartition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_date', models.DateField(verbose_name='Қабул қилинган сана')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Олиш нархи')),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Олиш нархи')),
                ('quantity_per_pack', models.DecimalField(decimal_places=2, max_digits=18,
                                                          verbose_name='Катта ўлчам ичида майда ўлчамдагисининг сони')),
            ],
            options={
                'verbose_name': 'Товар партияси',
                'verbose_name_plural': 'Товар партиялари',
                'db_table': 'good_partition',
            },
        ),
        migrations.CreateModel(
            name='ListBalanceCalcMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(verbose_name='Код')),
                ('name', models.CharField(max_length=50, verbose_name='Номи')),
                ('description', models.CharField(max_length=200, verbose_name='Изох')),
            ],
            options={
                'verbose_name': 'Қолдиқни хисоблаш усули',
                'verbose_name_plural': 'Қолдиқни хисоблаш усуллари',
                'db_table': 'list_balance_calc_method',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='ListCurrency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Код')),
                ('name', models.CharField(max_length=50, verbose_name='Валюта номи')),
                ('short_name', models.CharField(max_length=10, verbose_name='Қисқа номи')),
                ('currency_symbol', models.CharField(max_length=5, verbose_name='Валюта символи')),
            ],
            options={
                'verbose_name': 'Тўлов тури',
                'verbose_name_plural': 'Тўлов турлари',
                'db_table': 'list_currency',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='OwnerCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Компания номи')),
                ('short_name', models.CharField(max_length=50, verbose_name='Қисқа номи')),
                ('code', models.IntegerField(unique=True, verbose_name='Коди')),
                ('date_activate', models.DateTimeField(auto_now=True, verbose_name='Рўйхатдан ўтган санаси ва вақти')),
                ('date_deactivate', models.DateTimeField(null=True, verbose_name='Фойдаланиш тўхтаган сана, вақти')),
                ('status', models.IntegerField(verbose_name='Шартнома холати')),
            ],
            options={
                'verbose_name': 'Сайтда хисобини юритувчи',
                'verbose_name_plural': 'Сайтда хисобини юритувчи',
                'db_table': 'owner_company',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                              max_length=150, unique=True,
                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                                              verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_activated', models.BooleanField(db_index=True, default=True, verbose_name='Фаоллаштирилдими?')),
                ('send_messages', models.BooleanField(default=True, verbose_name='Хабар юбориш мумкинми?')),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('owner_company_id',
                 models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                   verbose_name='Қайси ташкилот')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Фойдаланувчи',
                'verbose_name_plural': 'Фойдаланувчилар',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ListPaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Код')),
                ('name', models.CharField(max_length=200, verbose_name='Номи')),
                (
                    'direction_accepted',
                    models.BooleanField(default=True, verbose_name='Пул кирим қилиняптими(кассага)')),
                ('can_user_select', models.BooleanField(default=False, verbose_name='Танлаш мумкинми')),
                ('currency_id',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.ListCurrency',
                                   verbose_name='Пул тури')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                               verbose_name='Ташкилот')),
            ],
            options={
                'verbose_name': 'Тўлов тури',
                'verbose_name_plural': 'Тўлов турлари',
                'db_table': 'list_payment_type',
            },
        ),
        migrations.CreateModel(
            name='ListGood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Код')),
                ('name', models.CharField(max_length=100, verbose_name='Товар номи')),
                ('unit_measurement_main', models.CharField(max_length=25, verbose_name='Йирик ўлчови')),
                ('unit_measurement_small', models.CharField(max_length=25, verbose_name='Кичик ўлчови')),
                ('balanceCalcMethod',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.ListBalanceCalcMethod')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                               verbose_name='Ташкилот')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товарлар',
                'db_table': 'list_good',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='ListEmployee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Исми шарифи')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Ойлик иш хақи')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Фаолми?')),
                ('enrollment_date', models.DateField(verbose_name='Ишга кирган санаси')),
                ('date_of_dismissal', models.DateField(verbose_name='Ишдан бўшаган сана')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                               verbose_name='Ташкилот')),
            ],
            options={
                'verbose_name': 'Ташкилот ходими',
                'verbose_name_plural': 'Ташкилот ходимлари',
                'db_table': 'list_employee',
            },
        ),
        migrations.CreateModel(
            name='ListCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Номери')),
                ('name', models.CharField(max_length=150, verbose_name='Номи')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                               verbose_name='Ташкилот')),
            ],
            options={
                'verbose_name': 'Ҳамкор',
                'verbose_name_plural': 'Хамкорлар',
                'db_table': 'list_customer',
                'ordering': ['-name'],
            },
        ),
        migrations.AddField(
            model_name='listcurrency',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                    verbose_name='Ташкилот'),
        ),
        migrations.AddField(
            model_name='listbalancecalcmethod',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                    verbose_name='Ташкилот'),
        ),
        migrations.CreateModel(
            name='GoodTurnoverRemaining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_day', models.DateField(verbose_name='Иш куни')),
                ('accepted',
                 models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Қабул қилинди(бир кунда)')),
                ('issued', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Берилди(бир кунда)')),
                ('remaining', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Кун охирига қолди')),
                ('good_partition_id',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.GoodPartition',
                                   verbose_name='Товар партияси')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                               verbose_name='Ташкилот')),
            ],
            options={
                'verbose_name': 'Товар қолдиғи',
                'verbose_name_plural': 'Товар қолдиқлари',
                'db_table': 'good_turnover_remaining',
            },
        ),
        migrations.AddField(
            model_name='goodpartition',
            name='company_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                    verbose_name='Ташкилот'),
        ),
        migrations.AddField(
            model_name='goodpartition',
            name='good_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.ListGood',
                                    verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='goodpartition',
            name='purchased_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.ListCustomer',
                                    verbose_name='Бу товар партияси кимдан олинган'),
        ),
        migrations.CreateModel(
            name='EmployeeTurnoverRemaining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_day', models.DateField(verbose_name='Иш куни')),
                ('accepted',
                 models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Хақдор бўлди(бир кунда)')),
                (
                    'issued',
                    models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Хақи камайди(бир кунда)')),
                ('remaining', models.DecimalField(decimal_places=2, max_digits=18,
                                                  verbose_name='Кун охирига қолган хақи ёки қарзи')),
                ('employee_id',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.ListEmployee',
                                   verbose_name='Ходим')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                               verbose_name='Ташкилот')),
            ],
            options={
                'verbose_name': 'Ходим хақи ўзгариши',
                'verbose_name_plural': 'Ходим хақи ўзгариши',
                'db_table': 'employee_turnover_remaining',
            },
        ),
        migrations.CreateModel(
            name='CashBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_day', models.DateField(verbose_name='Иш куни')),
                ('accepted',
                 models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Қабул қилинди(бир кунда)')),
                ('issued', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Берилди(бир кунда)')),
                ('remaining', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Кун охирига қолди')),
                ('currency_id',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.ListCurrency',
                                   verbose_name='Пул тури')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BAccount.OwnerCompany',
                                               verbose_name='Ташкилот')),
            ],
            options={
                'verbose_name': 'Пул маблағи',
                'verbose_name_plural': 'Пул маблағлари',
                'db_table': 'cash_box',
            },
        ),
    ]
